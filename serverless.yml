service: insultbot

custom:
  region: ${self:provider.region}
  stage: ${env:STAGE, self:custom.localConfig.stage, opt:stage, 'dev'}
  prefixAuto: ${self:service}-${self:custom.stage}
  prefix: ${env:PREFIX, self:custom.prefixAuto}
  resourceNames:
    delivery: ${self:custom.prefix}-delivery
    sqs: ${self:custom.prefix}-messages

provider:
  name: aws
  runtime: nodejs8.10
  environment:
    LOG_LEVEL: ${env:LOG_LEVEL, "debug"}
    HOSTNAME: ${env:HOSTNAME, "insultron.lmorchard.com"}
    ACTOR_NAME: ${env:ACTOR_NAME, "Insultron2000"}
    QUEUE_NAME: ${self:custom.resourceNames.sqs}
  iamRoleStatements:
  - Effect: Allow
    Resource: arn:aws:sqs:*:*:${self:custom.resourceNames.sqs}
    Action:
      - sqs:ChangeMessageVisibility
      - sqs:ChangeMessageVisibilityBatch
      - sqs:DeleteMessage
      - sqs:DeleteMessageBatch
      - sqs:GetQueueAttributes
      - sqs:GetQueueUrl
      - sqs:ReceiveMessage
      - sqs:SendMessage
      - sqs:SendMessageBatch

resources:
  Resources:
    DeliveryMessages:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.resourceNames.sqs}
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 60

functions:
  index:
    handler: functions/index.get
    name: ${self:custom.prefix}-indexGet
    events:
      - http: GET /
  webfingerGet:
    handler: functions/webfinger.get
    name: ${self:custom.prefix}-webfingerGet
    events:
      - http: GET .well-known/webfinger
  actorGet:
    handler: functions/actor.get
    name: ${self:custom.prefix}-actorGet
    events:
      - http: GET actor
  inboxGet:
    handler: functions/inbox.get
    name: ${self:custom.prefix}-inboxGet
    events:
      - http: GET inbox
  inboxPost:
    handler: functions/inbox.post
    name: ${self:custom.prefix}-inboxPost
    events:
      - http: POST inbox
  outboxGet:
    handler: functions/outbox.get
    name: ${self:custom.prefix}-outboxGet
    events:
      - http: GET outbox
  periodic:
    timeout: 60
    handler: functions/periodic.handler
    name: ${self:custom.prefix}-periodic
    events:
      - schedule: rate(1 hour)
  delivery:
    timeout: 60
    handler: functions/delivery.handler
    name: ${self:custom.resourceNames.delivery}
    reservedConcurrency: 5
    events:
      - sqs:
          batchSize: 5
          arn:
            Fn::GetAtt:
              - DeliveryMessages
              - Arn
